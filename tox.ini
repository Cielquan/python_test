# -- TOX CONFIG ------------------------------------------------------------------------
[tox]
minversion = 3.9
skip_missing_interpreters = True
#: Flag indicating to perform the packaging operation or not.
#: Set it to True when using tox for an application, instead of a library.
skipsdist = False

envlist =
    pre-commit
    py3{8,7,6}
    package_description
    docs
    coverage


[testenv]
description = run tests with {basepython}
setenv =
    PIP_DISABLE_VERSION_CHECK = 1
    COVERAGE_FILE = {env:COVERAGE_FILE:{toxworkdir}/.coverage.{envname}}
passenv =
    SSL_CERT_FILE
    PYTEST_*
    HOME
    CI
    TRAVIS
    TRAVIS_*
    SSH_AUTH_SOCK
    http_proxy
    https_proxy
    no_proxy
# Windows can't update the pip version with pip running, use Python to install things.
install_command = python -m pip install -U {opts} {packages}
deps =
    pip >= 19.1.1
extras = testing
usedevelop = True
commands =
    pytest \
    --cov "{envsitepackagesdir}/python_test" \
    --cov-config "{toxinidir}/tox.ini" \
    --cov-fail-under 0 \
    --junitxml {toxworkdir}/junit.{envname}.xml \
    -n={env:PYTEST_XDIST_PROC_NR:auto} \
    {posargs:tests}


[testenv:coverage]
description = combine coverage data and create report; generates a diff coverage
              against origin/master (can be changed by setting DIFF_AGAINST env var)
deps =
    {[testenv]deps}
    coverage >= 5, < 6
    diff_cover
skip_install = True
passenv =
    {[testenv]passenv}
    DIFF_AGAINST
setenv = COVERAGE_FILE={toxworkdir}/.coverage
commands =
    coverage combine
    coverage report -m
    coverage xml -o {toxworkdir}/coverage.xml
    coverage html -d {toxworkdir}/htmlcov
    diff-cover --compare-branch {env:DIFF_AGAINST:origin/master} {toxworkdir}/coverage.xml
depends =
    py36
    py37
    py38
parallel_show_output = True


[testenv:pre-commit]
description = format the code
passenv =
    PROGRAMDATA
deps =
    {[testenv]deps}
    pylint >= 2.4, <3
    pre-commit >= 2, < 3
extras =
    {[testenv]extras}
    docs
usedevelop = True
commands =
    pre-commit run --all-files --show-diff-on-failure
    python -c 'import pathlib; print("hint: run \{\} install to add checks as pre-commit hook".format(pathlib.Path(r"{envdir}") / "bin" / "pre-commit"))'


[testenv:docs]
description = build and check docs with: sphinx
extras = docs
usedevelop = False
commands =
    #: Build fresh docs
    sphinx-build -b html -aqE docs/source docs/build/html
    #: Build for check and get all warnings
    sphinx-build -b html -b linkcheck -aEnq docs/source docs/build/html
    #: Build for success/fail status
    sphinx-build -b html -b linkcheck -aEnQW docs/source docs/build/html
    #: Output link to index.html
    python -c 'import pathlib; print("documentation available under file://\{0\}".format(pathlib.Path(r"{toxinidir}") / "docs" / "build" / "html" / "index.html"))'


[testenv:package_description]
description = check that the long description is valid
deps =
    {[testenv]deps}
    wheel
    twine >= 1.12.1
    readme-renderer[rst] >= 24.0
skip_install = True
extras =
commands =
    pip wheel -w {envtmpdir}/build --no-deps .
    twine check {envtmpdir}/build/*


[testenv:dev]
description = create dev environment
extras = testing, docs
usedevelop = True
commands =
    python -m pip list --format=columns
    python -c "print(r'{envpython}')"


# -- PYTEST CONFIG ---------------------------------------------------------------------
# [pytest] in pytest.ini | tox.ini
# [tool:pytest] in setup.cfg
[pytest]
addopts = -ra --showlocals
testpaths = tests
python_files = *.py
python_functions = test_*
junit_family=xunit1


# -- COVERAGE CONFIG -------------------------------------------------------------------
# [<category>] in .coveragerc
# [coverage:<category>] in setup.cfg | tox.ini
[coverage:run]
branch = True
parallel = True
source = src/
[coverage:report]
fail_under = 100
skip_covered = False
show_missing = True
exclude_lines =
    pragma: no cover
    def __str__
    def __repr__
    if self.debug:
    if settings.DEBUG
    raise AssertionError
    raise NotImplementedError
    if 0:
    if __name__ == .__main__.:
omit =
    venv/*
    tests/*
    setup.py
    */__main__.py
[coverage:paths]
source =
    src/python_test
     */.tox/*/lib/python*/site-packages/python_test
     */.tox/pypy*/site-packages/python_test
     */.tox\*\Lib\site-packages\python_test
     */src/python_test
     *\src\python_test


# -- ISORT CONFIG ----------------------------------------------------------------------
# [isort] in .isort.cfg | setup.cfg | tox.ini
# [tool:isort] in setup.cfg | tox.ini
# [tool.isort] in pyproject.toml
[isort]
multi_line_output = 3
include_trailing_comma = True
lines_after_imports = 2
lines_between_types = 1
known_first_party = python_test,tests
known_third_party =flask,setuptools,sphinx_rtd_theme
skip = venv


# -- FLAKE8 CONFIG ---------------------------------------------------------------------
# [flake8] in .flake8 | setup.cfg | tox.ini
[flake8]
count = True
statistics = True
exclude =
    .git
    __pycache__
    .tox
    venv
    *.egg
    build
extend-exclude = venv/ # flake8 >= 3.8.0 not released yet
;#ignore = E121,E123,E126,E226,E24,E704,W503,W504
;# extend-ignore =
max-line-length = 88
max-complexity = 15


# -- TRAVIS CONFIG ---------------------------------------------------------------------
[travis]
python =
    3.6: py36
    3.7: py37
    3.8: py38, docs, package_description, dev
