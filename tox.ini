#: -- TOX CONFIG -----------------------------------------------------------------------
[tox]
minversion = 3.15.0
skip_missing_interpreters = true
#: Activate isolated build environment - PEP-517/518.
isolated_build = true
#: Application -> true; Library -> false
skipsdist = false

envlist =
    safety
    pre-commit
    package
    py{py3,310,39,38,37,36}
    coverage-all
    docs-test-{html,linkcheck,coverage,doctest,spelling}
python_test_version = py{py3,310,39,38,37,36}


[testenv]
description = run tests with {basepython}
passenv =
    HOME
    CI
    PYTEST_*
setenv = PIP_DISABLE_VERSION_CHECK = 1
download = true
extras =
    nox
    testing
commands =
    nox --session code_test -- called_by_tox {posargs}


[testenv:safety]
description = check all dependencies for known vulnerabilities
skip_install = true
deps = poetry>=1
commands =
    poetry install --no-root --no-dev --extras "nox poetry safety"
    nox --session safety -- called_by_tox


[testenv:pre-commit]
description = format and check the code
passenv =
    SSH_AUTH_SOCK
    SKIP
extras =
    nox
    pre-commit
    testing
    docs
    poetry
commands =
    nox --session pre_commit -- called_by_tox {posargs}


[testenv:package]
description = check sdist and wheel
skip_install = true
deps = poetry>=1
commands =
    poetry install --no-root --no-dev --extras "nox poetry twine"
    nox --session package -- called_by_tox


[testenv:coverage-{all,merge,report}]
description =
    all,merge: combine coverage data and create xml/html reports;
    all,report: report total and diff coverage against origin/master (or DIFF_AGAINST)
depends = {[tox]python_test_version}
passenv =
    {[testenv]passenv}
    all,report: MIN_COVERAGE
    all,report: MIN_DIFF_COVERAGE
    all,report: DIFF_AGAINST
    all,report: DIFF_RANGE_NOTATION
skip_install = true
deps = poetry>=1
commands =
    all,report: poetry install --no-root --no-dev --extras "nox coverage diff-cover"
    all: nox --session coverage -- called_by_tox
    report: nox --session coverage -- called_by_tox report
    merge: poetry install --no-root --no-dev --extras "nox coverage"
    merge: nox --session coverage -- called_by_tox merge


[testenv:docs]
description = build docs with sphinx
extras =
    nox
    docs
commands =
    nox --session docs -- called_by_tox {posargs}


[testenv:docs-test-{html,linkcheck,coverage,doctest,spelling,confluence}]
description = build and check docs with (see env name) sphinx builder
extras =
    nox
    docs
commands =
    html: nox --session "docs_test(builder='html')" -- called_by_tox {posargs}
    linkcheck: nox --session "docs_test(builder='linkcheck')" -- called_by_tox {posargs}
    coverage: nox --session "docs_test(builder='coverage')" -- called_by_tox {posargs}
    doctest: nox --session "docs_test(builder='doctest')" -- called_by_tox {posargs}
    spelling: nox --session "docs_test(builder='spelling')" -- called_by_tox {posargs}
    confluence: nox --session "docs_test(builder='confluence')" -- called_by_tox {posargs}


#: -- MYPY CONFIG ----------------------------------------------------------------------
# TODO: 06.06.2020: move config to pyproject.toml when supported
[mypy]
show_error_codes = true
strict_optional = true
warn_unused_ignores = true
warn_redundant_casts = true
warn_return_any = true
warn_unreachable = true
python_version = 3.8


#: -- RSTCHECK CONFIG ------------------------------------------------------------------
# TODO: 18.08.2020: move config to pyproject.toml when supported
[rstcheck]
ignore_directives = jira_issue,click
