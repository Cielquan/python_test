# -- TOX CONFIG ------------------------------------------------------------------------
[tox]
minversion = 3.9
skip_missing_interpreters = False
# Flag indicating to perform the packaging operation or not.
# Set it to true when using tox for an application, instead of a library.
skipsdist = False

envlist =
    py3{8,7,6}
    coverage
    lint
    docs


[testenv]
description = {envname}
# Windows can't update the pip version with pip running, use Python to install things.
install_command = python -m pip install -U {opts} {packages}
usedevelop = True
deps =
    pytest
    coverage
commands = coverage run -p -m pytest --tb=short -Werror {posargs}


[testenv:coverage]
depends =
    py36
    py37
    py38
deps = coverage
skip_install = true
commands =
    coverage combine
    coverage html
    coverage report


[testenv:lint]
description = "linting with: isort|black|flake8|pylint"
deps =
    {[testenv]deps}
    isort
    black
    flake8
    pylint
commands =
    isort --check-only --diff --recursive
    black --check --line-length 88 --exclude venv/ .
    flake8 python_test
    pylint src tests docs setup --ignore=version.py


[testenv:docs]
description = "build and check docs with: sphinx"
deps =
    -r docs/source/requirements.pip
commands =
    #: Build fresh docs
    sphinx-build -b html -aqE docs/source docs/build/html
    #: Build for check and get all warnings
    sphinx-build -b html -b linkcheck -aEnq docs/source docs/build/html
    #: Build for success/fail status
    sphinx-build -b html -b linkcheck -aEnQW docs/source docs/build/html


[testenv:format]
description = "uncompromising code formatting with: isort|black"
deps =
    isort
    black
commands =
    isort --apply --recursive
    black --safe --line-length 88 --exclude venv/ .


[testenv:dev]
description = "install package - use for development"
deps = pytest
commands =


# -- PYTEST CONFIG ---------------------------------------------------------------------
# [pytest] in pytest.ini | tox.ini
# [tool:pytest] in setup.cfg
[pytest]
addopts = -ra
testpaths = tests
python_files = *.py
python_functions = test_*


# -- COVERAGE CONFIG -------------------------------------------------------------------
# [<category>] in .coveragerc
# [coverage:<category>] in setup.cfg | tox.ini
[coverage:run]
branch = True
source = src/

[coverage:report]
fail_under = 90
skip_covered = True
show_missing = True
exclude_lines =
    pragma: no cover
    def __str__
    def __repr__
    if self.debug:
    if settings.DEBUG
    raise AssertionError
    raise NotImplementedError
    if 0:
    if __name__ == .__main__.:
omit =
    venv/*
    tests/*
    setup.py

[coverage:paths]
source = src/python_test
         */.tox/*/lib/python*/site-packages/python_test
         */.tox/pypy*/site-packages/python_test
         */.tox\*\Lib\site-packages\python_test
         */src/python_test
         *\src\python_test


# -- ISORT CONFIG ----------------------------------------------------------------------
# [isort] in .isort.cfg | setup.cfg | tox.ini
# [tool:isort] in setup.cfg | tox.ini
# [tool.isort] in pyproject.toml
[isort]
multi_line_output = 3
lines_after_imports = 2
lines_between_types = 1
;known_first_party =
;known_third_party =
skip = venv


# -- FLAKE8 CONFIG ---------------------------------------------------------------------
# [flake8] in .flake8 | setup.cfg | tox.ini
[flake8]
count = True
statistics = True
exclude =
    .git
    __pycache__
    .tox
    venv
extend-exclude = venv/ # flake8 >= 3.8.0 not released yet
;#ignore = E121,E123,E126,E226,E24,E704,W503,W504
;# extend-ignore =
max-line-length = 88
max-complexity = 15


# -- TRAVIS CONFIG ---------------------------------------------------------------------
[travis]
python =
  3.6: py36
  3.7: py37
  3.8: py38, docs
