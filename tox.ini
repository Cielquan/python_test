# -- TOX CONFIG ------------------------------------------------------------------------
[tox]
minversion = 3.15.0

#: For locally skipping missing interpreters use `tox -s false`
skip_missing_interpreters = False

#: Set it to True when using tox for an application, instead of a library.
skipsdist = True

#: Activate isolated build environment. For build tools and arguments use the
#: pyproject.toml file as specified in PEP-517 and PEP-518.
isolated_build = True

envlist =
;    pre-commit
;    bandit
    ; TODO: 13.05.2020:  dependant on lin/win and lib/app
    py3{8,7,6}-{nix,win}
    dev
;    coverage
;    package_description
;    docs


[testenv]
description = basic config env
setenv =
    PIP_DISABLE_VERSION_CHECK = 1
    COVERAGE_FILE = {env:COVERAGE_FILE:{toxworkdir}/.coverage.{envname}}
passenv =
    PYTEST_*
    HOME
    CI
    TRAVIS
    TRAVIS_*
;platform =
;    nix: linux|darwin
;    win: win32

;[testenv:2]
;    py36: python3.6
;    py37: python3.7
;    py38: python3.8
commands = python --version


;[testenv:py38-{nix,win}]
;platform = win32

[py_ver]
basepython =
    nix: python3.6
    win: python3.7

[testenv:dev{,ug}]
deps = tox >= 3.15
envdir = {toxworkdir}/dev_creator
commands =
    dev: tox -e dev-nix,dev-win
    devup: tox -e devug-nix,devug-win

[testenv:dev{,ug}-{nix,win}]
description =
    dev: create dev environment
    devug: create dev environment with global `debug()`
envdir = {toxworkdir}/dev
basepython = {[py_ver]basepython}
deps =
;    {[testenv:pre-commit]deps}
    mypy == 0.770
;    -r requirements.pip # Inline comment with # are allowed in 'deps'
;    -r tests/requirements.pip
;    -r docs/source/requirements.pip
    devug: devtools[pygments]>=0.5.1,<0.6
extras =
    testing
    docs
usedevelop = True
sitepackages =
    dev: False
    devug: True
;commands =
;    #: Create `usercustomize.py` file in venv's site-packages importing devtools.debug() and assigning it to `__builtins__`
;    devug: python -c "f=open(r'{envsitepackagesdir}'+'/usercustomize.py','w');f.write('from devtools import debug\n__builtins__[\'debug\'] = debug\n');f.close()"
;    python -m pip list --format=columns
;    python -c "print('PYTHON INTERPRETER LOCATION: ' + r'{envpython}')"

[testenv:pylint]
deps = pylint>=2.4,<3
commands = pylint {posargs}

;[testenv:pylint-{nix,win}]
;platform =
;    nix: linux|darwin
;    win: win32
;commands =
;    nix: ./.tox/pre-commit/bin/pylint
;    win: ./.tox/pre-commit/Scripts/pylint.exe

[testenv:pre-commit]
description = format and check the code
passenv =
    SSH_AUTH_SOCK
deps =
    pre-commit>=2,<3
    mypy==0.770
    pylint>=2.4,<3
commands =
;    pre-commit run --all-files --show-diff-on-failure
    python -c 'import pathlib;print("HINT: run \"\{\} install\" to add checks as pre-commit hook".format(pathlib.Path(r"{envdir}")/"bin"/"pre-commit"))'


[testenv:bandit]
description = run bandit for security checks
deps = bandit >= 1.6.2, < 2
commands = bandit -x ./.tox/*,./.eggs/*,./tests/* -r .


[testenv:docs]
description = build and check docs with sphinx
deps = -r docs/source/requirements.pip
extras = docs
commands =
    #: Build fresh docs
    sphinx-build -b html -aqE docs/source docs/build/html
    #: Build for check and get all warnings
    sphinx-build -b html -b linkcheck -aEnq docs/source docs/build/html
    #: Build for success/fail status
    sphinx-build -b html -b linkcheck -aEnQW docs/source docs/build/html
    #: Output link to index.html
    python -c 'import pathlib; print("DOCUMENTATION AVAILABLE UNDER: file://\{0\}".format(pathlib.Path(r"{toxinidir}") / "docs" / "build" / "html" / "index.html"))'


[testenv:package_description]
description = check that the long description is valid
deps =
    wheel
    twine >= 1.12.1
    readme-renderer >= 24.0
skip_install = True
extras =
commands =
    pip wheel -w {envtmpdir}/build --no-deps .
    twine check {envtmpdir}/build/*


[testenv:coverage]
description = combine coverage data and create report; generates a diff coverage
              against origin/master (can be changed by setting DIFF_AGAINST env var)
deps =
    coverage>=5,<6
    diff_cover
skip_install = True
passenv =
    {[testenv]passenv}
    DIFF_AGAINST
setenv = COVERAGE_FILE={toxworkdir}/.coverage
commands =
    coverage combine
    coverage report -m
    coverage xml -o {toxworkdir}/coverage.xml
    coverage html -d {toxworkdir}/htmlcov
    diff-cover --compare-branch {env:DIFF_AGAINST:origin/master} {toxworkdir}/coverage.xml
depends =
    pytest
parallel_show_output = True


[testenv:pytest]
description = run tests with pytest
# changedir default - change cwd while execution of the env
changedir = {toxinidir}
deps = -r tests/requirements.pip
extras = testing
commands =
    pytest \
    --basetemp="{envtmpdir}" \
    --cov "{envsitepackagesdir}/color_space_visualizer" \
    --cov-config "{toxinidir}/tox.ini" \
    --cov-fail-under 0 \
    --junitxml {toxworkdir}/junit.{envname}.xml \
    -n={env:PYTEST_XDIST_PROC_NR:auto} \
    {posargs:tests}





########################################################################################
########################################################################################
########################################################################################
########################################################################################
########################################################################################
########################################################################################
########################################################################################
########################################################################################
########################################################################################
########################################################################################
########################################################################################
########################################################################################
########################################################################################
########################################################################################
########################################################################################
########################################################################################
########################################################################################
########################################################################################
########################################################################################
########################################################################################


# -- PYTEST CONFIG ---------------------------------------------------------------------
# [pytest] in pytest.ini | tox.ini
# [tool:pytest] in setup.cfg
[pytest]
addopts = -ra --showlocals
testpaths = tests
python_files = *.py
python_functions = test_*
junit_family = xunit1
mock_use_standalone_module = True


# -- COVERAGE CONFIG -------------------------------------------------------------------
# [<category>] in .coveragerc
# [coverage:<category>] in setup.cfg | tox.ini
[coverage:run]
branch = True
parallel = True
source = src/
[coverage:report]
fail_under = 100
skip_covered = False
show_missing = True
exclude_lines =
    pragma: no cover
    def __str__
    def __repr__
    if self.debug:
    if settings.DEBUG
    raise AssertionError
    raise NotImplementedError
    if 0:
    if __name__ == .__main__.:
omit =
    venv/*
    tests/*
    setup.py
    */__main__.py
[coverage:paths]
source =
    src/color_space_visualizer
     */.tox/*/lib/python*/site-packages/color_space_visualizer
     */.tox/pypy*/site-packages/color_space_visualizer
     */.tox\*\Lib\site-packages\color_space_visualizer
     */src/color_space_visualizer
     *\src\color_space_visualizer


# -- MYPY CONFIG -----------------------------------------------------------------------
[mypy]
warn_redundant_casts = True
warn_unused_configs = True


# -- ISORT CONFIG ----------------------------------------------------------------------
# [isort] in .isort.cfg | setup.cfg | tox.ini
# [tool:isort] in setup.cfg | tox.ini
# [tool.isort] in pyproject.toml
[isort]
multi_line_output = 3
include_trailing_comma = True
lines_after_imports = 2
lines_between_types = 1
known_first_party = color_space_visualizer,tests
known_third_party =
skip = venv


# -- FLAKE8 CONFIG ---------------------------------------------------------------------
# [flake8] in .flake8 | setup.cfg | tox.ini
[flake8]
count = True
statistics = True
exclude =
    .git
    __pycache__
    .tox
    venv
    *.egg
    build
extend-exclude = venv/ # flake8 >= 3.8.0 not released yet
;#ignore = E121,E123,E126,E226,E24,E704,W503,W504
extend-ignore = E203
max-line-length = 88
max-complexity = 20
pytest-fixture-no-parentheses = True


# -- PYLINT CONFIG ---------------------------------------------------------------------
[pylint:MESSAGES CONTROL]
disable=
    C0330, # Indentation | deactivated for black
;disable=print-statement, #E1601
;        parameter-unpacking, #E1602
;        unpacking-in-except, #E1603
;        old-raise-syntax, #E1604
;        backtick, #E1605
;        long-suffix, #E1606
;        old-ne-operator, #E1607
;        old-octal-literal, #E1608
;        import-star-module-level, #E1609
;        non-ascii-bytes-literal, #E1610
;        raw-checker-failed, ##I0001
;        bad-inline-option, ##I0010
;        locally-disabled, ##I0011
;        file-ignored, ##I0013
;        suppressed-message, ##I0020
;        useless-suppression, ##I0021
;        deprecated-pragma, ##I0022
;        use-symbolic-message-instead, #I0023
;        apply-builtin, #W1601
;        basestring-builtin, #W1602
;        buffer-builtin, #W1603
;        cmp-builtin, #W1604
;        coerce-builtin, #W1605
;        execfile-builtin, #W1606
;        file-builtin, #W1607
;        long-builtin, #W1608
;        raw_input-builtin, #W1609
;        reduce-builtin, #W1610
;        standarderror-builtin, #W1611
;        unicode-builtin, #W1612
;        xrange-builtin, #W1613
;        coerce-method, #W1614
;        delslice-method, #W1615
;        getslice-method, #W1616
;        setslice-method, #W1617
;        no-absolute-import, #W1618
;        old-division, #W1619
;        dict-iter-method, #W1620
;        dict-view-method, #W1621
;        next-method-called, #W1622
;        metaclass-assignment, #W1623
;        indexing-exception, #W1624
;        raising-string, #W1625
;        reload-builtin, #W1626
;        oct-method, #W1627
;        hex-method, #W1628
;        nonzero-method, #W1629
;        cmp-method, #W1630
;        input-builtin, #W1632
;        round-builtin, #W1633
;        intern-builtin, #W1634
;        unichr-builtin, #W1635
;        map-builtin-not-iterating, #W1636
;        zip-builtin-not-iterating, #W1637
;        range-builtin-not-iterating, #W1638
;        filter-builtin-not-iterating, #W1639
;        using-cmp-argument, #W1640
;        eq-without-hash, #W1641
;        div-method, #W1642
;        idiv-method, #W1643
;        rdiv-method, #W1644
;        exception-message-attribute, #W1645
;        invalid-str-codec, #W1646
;        sys-max-int, #W1647
;        bad-python3-import, #W1648
;        deprecated-string-function, #W1649
;        deprecated-str-translate-call, #W1650
;        deprecated-itertools-function, #W1651
;        deprecated-types-field, #W1652
;        next-method-defined, #W1653
;        dict-items-not-iterating, #W1654
;        dict-keys-not-iterating, #W1655
;        dict-values-not-iterating, #W1656
;        deprecated-operator-function, #W1657
;        deprecated-urllib-function, #W1658
;        xreadlines-attribute, #W1659
;        deprecated-sys-function, #W1660
;        exception-escape, #W1661
;        comprehension-escape, #W1662
;        C0330,
;        F0010,

# -- TRAVIS CONFIG ---------------------------------------------------------------------
[travis]
python =
    3.6: py36
    3.7: py37
    3.8: py38, pre-commit, bandit
