# -- TOX CONFIG ------------------------------------------------------------------------
[tox]
minversion = 3.15.0
skip_missing_interpreters = True
#: Activate isolated build environment - PEP-517/518.
isolated_build = True
#: Application -> True; Library -> False
skipsdist = False

envlist =
    pre-commit
    bandit
    py3{8,7,6}
    coverage
    package
    docs


[testenv]
description = basic config env
passenv =
    PYTEST_*
    HOME
    CI
    TRAVIS
    TRAVIS_*
setenv =
    PIP_DISABLE_VERSION_CHECK = 1
    COVERAGE_FILE = {env:COVERAGE_FILE:{toxworkdir}/.coverage.{envname}}
download = True


[testenv:pre-commit]
description = format and check the code
passenv =
    SSH_AUTH_SOCK
extras =
    pre-commit
    testing
    docs
ignore_errors = True
commands =
    pre-commit run --all-files --show-diff-on-failure
    python -c 'from pathlib import Path; \
        print(f"""HINT: run "\{Path(r"{envbindir}/pre-commit")\} install" """ \
              "to add checks as pre-commit hook")'


[testenv:bandit]
description = run bandit for security checks
skip_install = True
deps = bandit >= 1.6.2, < 2
commands = bandit -x ./.tox/*,./venv/*,./.eggs/*,./tests/* -r .


[testenv:py3{8,7,6}]
description = run tests with {basepython}
extras = testing
commands =
    pytest \
    --basetemp="{envtmpdir}" \
    --cov "{envsitepackagesdir}/python_test" \
    --cov-fail-under 0 \
;    --junitxml {toxworkdir}/junit.{envname}.xml \
;    -n={env:PYTEST_XDIST_PROC_NR:auto} \
    {posargs:tests}


[testenv:coverage]
description = combine coverage data and create report; generates a diff coverage
              against origin/master (can be changed by setting DIFF_AGAINST env var)
depends = py3{8,7,6}
passenv =
    {[testenv]passenv}
    DIFF_AGAINST
setenv = COVERAGE_FILE={toxworkdir}/.coverage
skip_install = True
deps =
    coverage[toml]>=5,<6
    covdefaults>=1.1,<2
    diff_cover
parallel_show_output = True
commands =
    coverage combine
    coverage report -m
    coverage xml -o {toxworkdir}/coverage.xml
    coverage html -d {toxworkdir}/htmlcov
    diff-cover --compare-branch {env:DIFF_AGAINST:origin/master} {toxworkdir}/coverage.xml


[testenv:package]
description = check sdist and wheel
skip_install = True
deps =
    twine
    poetry>=0.12
commands =
    poetry build
    twine check dist/*


[testenv:docs]
description = build docs with sphinx
extras = docs
commands =
    #: Build fresh docs
    sphinx-build -b html -aqE docs/source docs/build/html
    #: Output link to index.html
    python -c 'from pathlib import Path; \
        print("DOCUMENTATION AVAILABLE UNDER: " \
              f"""file://\{Path(r"{toxinidir}/docs/build/html/index.html")\}""")'


[testenv:docs-linkcheck]
description = build and check links in docs with sphinx
extras = docs
commands =
    #: Build fresh docs
    sphinx-build -b html -aqE docs/source docs/build/html
    #: Build for check and get all warnings
    sphinx-build -b html -b linkcheck -aEnq docs/source docs/build/html
    #: Build for success/fail status
    sphinx-build -b html -b linkcheck -aEnQW docs/source docs/build/html


[testenv:dev]
description = create dev env
skip_install = True
whitelist_externals = poetry
commands =
    poetry install -E "testing docs pre-commit"
    #: HACK: Add `devtools.debug()` to `__builtins__` via `_debug.pth` in venv site-packages
    python -c 'f=open(r"{envsitepackagesdir}/_debug.pth","w"); \
               f.write("import devtools;__builtins__.update(debug=devtools.debug)"); \
               f.close()'
    python -m pip list --format=columns
    python -c 'print("PYTHON INTERPRETER LOCATION: " + r"{envpython}")'


# -- TRAVIS CONFIG ---------------------------------------------------------------------
[travis]
python =
    3.6: py36
    3.7: py37
    3.8: py38, pre-commit, bandit, package, docs-linkcheck


# -- PYTEST CONFIG ---------------------------------------------------------------------
# support for pyproject.toml for 5.5 planned
[pytest]
addopts = -ra --showlocals
mock_use_standalone_module = True
