name: Code testing
# TODO: let code-tests jobs fail when corresponding os pkg fails
# TODO: add code-climate upload
# TODO: set up dep cache

on:
  pull_request:
  push:
    branches: [master]

env:
  default_python_version: 3.8 # CHANGE ME

jobs:
  package-tests:
    name: Test package / ${{ matrix.os }}
    id: pkg-test-${{ matrix.os }}
    runs-on: ${{ matrix.os }}-latest
    strategy:
      matrix:
        os: [ubuntu, macos, windows]
    env:
      TOXENV: package
    steps:
      - uses: actions/checkout@v2

      - uses: actions/setup-python@v2
        with:
          python-version: ${{ env.default_python_version }}

      - name: Install tox
        run: |
          python -m pip install -U pip
          pip install tox

      - name: Generate tox env
        run: tox --notest -vv --skip-missing-interpreters false

      - name: Run package test via tox
        run: tox

  code-tests:
    name: ${{ matrix.os }} / python ${{ matrix.python_version }}
    needs: package-tests
    if: |
      ${{ matrix.os }} == 'ubuntu' && needs.pkg-test-ubuntu.result == 'success' ||
      ${{ matrix.os }} == 'macos' && needs.pkg-test-macos.result == 'success' ||
      ${{ matrix.os }} == 'windows' && needs.pkg-test-windows.result == 'success'
    runs-on: ${{ matrix.os }}-latest
    strategy:
      matrix:
        os: [ubuntu, macos, windows]
        python_version: [3.6, 3.7, 3.8, 3.9] # CHANGE ME
    env:
      PYTEST_ADDOPTS: -v -v -ra --showlocals
      PYTEST_XDIST_N: 0
    steps:
      - uses: actions/checkout@v2

      - name: Set up python ${{ matrix.python_version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python_version }}

      - name: Install tox
        run: |
          python -m pip install -U pip
          pip install tox tox-gh-actions

      - name: Generate tox env
        run: tox --notest -vv --skip-missing-interpreters false

      - name: Run tests via tox-gh-actions
        run: tox

      - name: Upload coverage artifact
        uses: actions/upload-artifact@v2
        with:
          name: coverage-${{ matrix.os }}-py${{ matrix.python_version }}
          path: .coverage_cache/.coverage*
          if-no-files-found: error

      - name: Upload junit artifact
        uses: actions/upload-artifact@v2
        with:
          name: junit-${{ matrix.os }}-py${{ matrix.python_version }}
          path: .junit_cache/junit*.xml
          if-no-files-found: error

  coverage:
    needs: code-tests
    if: always()
    runs-on: ubuntu-latest
    env:
      TOXENV: coverage
    steps:
      - uses: actions/checkout@v2

      - uses: actions/setup-python@v2
        with:
          python-version: ${{ env.default_python_version }}

      - name: Install tox
        run: |
          python -m pip install -U pip
          pip install tox

      - name: Generate tox env
        run: tox --notest -vv --skip-missing-interpreters false

      - name: Download coverage artifacts
        uses: actions/download-artifact@v2
        with:
          path: coverage-artifacts/

      - name: Move coverage files to .tox/
        shell: python
        run: |
          from pathlib import Path
          import shutil

          artifact_dir = Path("coverage-artifacts")
          cov_dir = Path(".coverage_cache")
          cov_dir.mkdir()
          for coverage_file in artifact_dir.glob("*/.coverage*"):
              destination = cov_dir / f".coverage.{coverage_file.parent.name[9:]}"
              print(f"{coverage_file} copy to {destination}")
              shutil.copy(str(coverage_file), str(destination))

      - name: Merge coverage data
        run: tox
        env:
          MIN_COVERAGE: 100

      - name: Upload coverage artifact
        uses: actions/upload-artifact@v2
        with:
          name: coverage-merged
          path: |
            .coverage_cache/coverage.xml
            .coverage_cache/.coverage
            .coverage_cache/htmlcov/
          if-no-files-found: error
