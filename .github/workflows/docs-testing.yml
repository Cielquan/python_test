name: Documentation testing

on:
  pull_request:
  push:
    branches: [master]

env:
  default_python_version: 3.8 # CHANGE ME

jobs:
  doc-tests:
    name: 'Test documentation / ${{ matrix.test }}'
    env:
      TOXENV: docs-test-${{ matrix.test }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        test: [html, linkcheck, coverage, doctest] # CHANGE ME
    steps:
      - uses: actions/checkout@v2

      - uses: actions/setup-python@v2
        with:
          python-version: ${{ env.default_python_version }}

      - name: Install tox
        run: |
          python -m pip install -U pip
          pip install tox

      - name: Get full Python version
        id: full-python-version
        shell: bash
        run: echo ::set-output name=version::$(python -c "import sys; print('-'.join(str(v) for v in sys.version_info))")

      - name: Set up cache
        uses: actions/cache@v2
        id: cache
        with:
          path: .tox/${{ env.TOXENV }}
          key: tox-env_${{ env.TOXENV }}_${{ runner.os }}_${{ steps.full-python-version.outputs.version }}_${{ hashFiles('**/poetry.lock') }}

      - name: Ensure cache is healthy
        if: steps.cache.outputs.cache-hit == 'true'
        shell: bash
        run: timeout 10s python -m .tox/${{ env.TOXENV }}/bin/pip --version || rm -rf .tox

      - name: Generate tox env
        run: tox --notest -vv --skip-missing-interpreters false

      - name: 'Run sphinx builder: ${{ matrix.test }}'
        run: tox
