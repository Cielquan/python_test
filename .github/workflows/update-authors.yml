---
name: Update AUTHORS

# What this workflow does:
# 1. Update the AUTHORS file
# 2. Git commit and push the file if there are changes.


on:  # yamllint disable-line rule:truthy
  workflow_dispatch:

  push:
    tags:
      - '!*'
    branches:
      - master


jobs:
  update-authors:
    name: Update AUTHORS file
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          persist-credentials: false
          fetch-depth: 0

      - uses: actions/setup-python@v2

      - name: Set git user
        run: |
          git config --global user.email "action@github.com"
          git config --global user.name "github-actions"

      - name: Update AUTHORS file
        shell: python
        run: |
          import subprocess

          git_authors = subprocess.run(
              ["git", "log", "--format=%aN <%aE>"], capture_output=True, check=True
          ).stdout.decode()

          authors = [
              author
              for author in set(git_authors.strip().split("\n"))
              if not author.startswith(("dependabot", "pre-commit-ci", "github-action"))
          ]
          authors.sort()

          file_head = (
              "# This file contains all the individuals who contributed to this "
              "repository.\n"
              "# This file is automatically generated/updated by a github actions "
              "workflow.\n"
              "# Every manual change will be overwritten on push to master.\n"
              "# You can find it here: `.github/workflows/update-authors.yml`\n"
          )

          with open("AUTHORS", "w") as authors_file:
              authors_file.write(file_head)
              authors_file.write("\n".join(authors))
              authors_file.write("\n")

      - name: Commit and push if diff
        # yamllint disable-line rule:line-length
        run: >
          git diff --exit-code AUTHORS
          || (git reset HEAD -- .
          && git commit -m 'Update AUTHORS file with new author(s)' --include AUTHORS
          && git push "https://${{ github.repository_owner }}:$GITHUB_TOKEN@github.com/${{ github.repository }}.git")
        env:
          GITHUB_TOKEN: ${{ secrets.RELEASE_TOKEN }}
