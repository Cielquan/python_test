minimum_pre_commit_version: "1.15"
default_stages: [commit]

repos:
#: -------------------------------------------------------------------------------------
#: Meta hooks
#: -------------------------------------------------------------------------------------
  #: Meta hooks provided by pre-commit
  - repo: meta
    hooks:
      - id: identity
        stages: [manual]
      - id: check-hooks-apply
        stages: [manual]
      - id: check-useless-excludes
        stages: [manual]


#: -------------------------------------------------------------------------------------
#: Commit hooks
#: -------------------------------------------------------------------------------------
  #: code unspecific out-of-the-box hooks
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: 9136088a246768144165fcc3ecc3d31bb686920a  # frozen: v3.3.0
    hooks:
      - id: check-case-conflict
      - id: name-tests-test
        args: ["--django"]
      - id: check-json
      - id: pretty-format-json
        args: ["--indent=4", "--autofix"]
      - id: check-toml
      - id: check-yaml
      - id: detect-private-key
      - id: trailing-whitespace
        stages: [commit]
      - id: end-of-file-fixer
        stages: [commit]

  #: several python code regex hooks
  - repo: https://github.com/pre-commit/pygrep-hooks
    rev: 4f4c0a4cda27980be153cca2cb7710c9fec57ba3  # frozen: v1.7.0
    hooks:
      - id: python-no-log-warn
      - id: python-no-eval

  #: pyupgrade - upgrade old python syntax to new
  - repo: https://github.com/asottile/pyupgrade
    rev: 928901205243fe52292052b8b0757d93f174d5e8  # frozen: v2.7.4
    hooks:
      - id: pyupgrade
        args: [--py36-plus]

  #: isort - sort imports
  #: Inline skip: `# isort: skip`
  - repo: https://github.com/timothycrosley/isort
    rev: 6bb47b7acc1554ecb59d2855e9110c447162f674  # frozen: 5.6.4
    hooks:
      - id: isort

  #: blacken-docs - black for python code in docs
  - repo: https://github.com/asottile/blacken-docs
    rev: 6d80883e826e3490b002dcf90c6807f85d42c871  # frozen: v1.8.0
    hooks:
      - id: blacken-docs
        additional_dependencies: [black==20.8b1]

  #: black - python formatter
  #: Inline skip: mark block with `# fmt: off` and `# fmt: on` (same indent)
  - repo: https://github.com/psf/black
    rev: e66be67b9b6811913470f70c28b4d50f94d05b22  # frozen: 20.8b1
    hooks:
      - id: black
        args: [--safe]

  #: bandit - python code security analyzer
  #: Inline skip: `# nosec`
  - repo: https://github.com/PyCQA/bandit
    rev: d25f3fc5f0f2bd8a251f252e9d81118c4947ae0e  # frozen: 1.6.2
    hooks:
      - id: bandit
        require_serial: true
        exclude: tests/.*$

# TODO: 06.06.2020: Fix PR merge https://github.com/python-poetry/poetry/issues/2457
#  #: poetry - dependency and packaging management
#  - repo: https://github.com/Cielquan/poetry
#    rev: 74a5e11def7912cc4b60e4384982e218c8a363b5
#    hooks:
#      #: Check config file
#      - id: poetry-check
#      #: Update lock file
##      - id: poetry-lock


  #: Hooks managed via tox `pre-commit` venv because they need the package installed
  - repo: local
    hooks:
      #: rstcheck - rst file checker
      - id: rstcheck
        args: ["--config=tox.ini"]
        name: rstcheck
        description: check rst files
        entry: python pre-commit-helper.py rstcheck pre-commit
        language: system
        types: [rst]
      #: mypy - python type checker
      #: Skip file: `# type: ignore` at top
      #: Inline skip: `# type: ignore` or `# type: ignore[CODE, ...]`
      - id: mypy
        args: ["--config-file=tox.ini"]
        name: mypy
        description: run mypy over the installed version if available
        entry: python pre-commit-helper.py mypy pre-commit
        language: system
        types: [python]
        require_serial: true
      #: pylint - python linter
      #: File skip: `# pylint: skip-file`
      #: Inline change: `# pylint: disable|enable=CODE|NAME`
      - id: pylint
        name: pylint
        description: run pylint over the installed version if available
        entry: python pre-commit-helper.py pylint pre-commit
        language: system
        types: [python]
      #: yesqa - noqa tester
      - id: yesqa
        args: []
        name: yesqa
        description: test if noqa is necessary
        entry: python pre-commit-helper.py yesqa pre-commit
        language: system
        types: [python]
      #: flake8 - python linter
      #: File skip: `# flake8: noqa`
      #: Inline skip: `# noqa` or `# noqa: CODE,...`
      - id: flake8
        args: [--min-python-version=3.6.1]
        name: flake8
        description: run flake8 over the installed version if available
        entry: python pre-commit-helper.py flake8 pre-commit
        language: system
        types: [python]
